name: "Description: Changelogs Validator"

on:
  pull_request:
    types: [opened, edited, reopened]

jobs:
  validate-pr-description:
    name: Validate PR Changelogs
    runs-on: ubuntu-latest
    steps:
    - name: Set up workspace
      uses: actions/checkout@v2

    - name: Validate PR Changelogs
      run: |
        # Ensure jq is installed
        sudo apt-get install jq

        # Fetch PR description using jq
        PR_DESCRIPTION=$(jq -r ".pull_request.body" "$GITHUB_EVENT_PATH")

        # Remove HTML comments from the PR description
        PR_DESCRIPTION_UNCOMMENTED=$(echo "$PR_DESCRIPTION" | sed -E ':a;N;$!ba;s/<!--([^-]|-[^-]|--[^>])*-->/\n/g')

        # Check for changelog header (:cl: or ðŸ†‘) outside comments
        if ! echo "$PR_DESCRIPTION_UNCOMMENTED" | grep -Eiq "(^|\s)(:cl:|ðŸ†‘)"; then
          echo "No changelog header found (:cl: or ðŸ†‘) outside comments. Skipping changelog entry checks."
          exit 0
        fi

        # Check for at least one changelog entry (add:, remove:, tweak:, fix:) outside comments
        if ! echo "$PR_DESCRIPTION_UNCOMMENTED" | grep -Eiq "(^|[ *-]+)(add:|remove:|tweak:|fix:)"; then
          echo "PR description must contain at least one changelog entry (add:, remove:, tweak:, or fix:) with a colon (:) immediately after the keyword, outside comments."
          EXIT_CODE=1
        fi

        # Check that all changelog entries are valid (must be add:, remove:, tweak:, or fix: with colon)
        INVALID_ENTRIES=$(echo "$PR_DESCRIPTION_UNCOMMENTED" | grep -Eio '^[ \t*-]*[a-zA-Z0-9_\-]+:' | grep -viE '^[ \t*-]*(add:|remove:|tweak:|fix:)$' || true)
        if [ -n "$INVALID_ENTRIES" ]; then
          echo "Invalid changelog entry types found (only add:, remove:, tweak:, or fix: are allowed, and must have a colon immediately after the keyword):"
          echo "$INVALID_ENTRIES"
          EXIT_CODE=1
        fi

        # Exit with error if any check failed
        if [ "$EXIT_CODE" = "1" ]; then
          exit 1
        fi
